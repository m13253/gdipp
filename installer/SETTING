setting.xml Description
===============

gdipp improves user experience by allowing them to tweak settings. All user settings are in setting.xml, which is shared by both 32-bit and 64-bit components. A default setting file is attached. In case of any setting item not presented in setting.xml, or setting.xml is missing, gdipp uses the default values in place of the missing one. Changed settings are loaded when the process is loaded.

The root node is <gdipp>. Its child nodes are <gdimm>, <service> and <exclude>. <gdimm> node contains settings for gdimm. <service> node contains settings for gdipp Service. <exclude> node contains excluded process names and font names, which is used by both gdimm and gdipp Service.

===============

Two types of child nodes can be included in <gdimm>. <process> nodes indicate separate settings for specified process name. <font> nodes indicate separate settings for specified font face name. The specified name of the processes and fonts comes from the "name" attribute of each node. This attribute support C++ TR1 Regular Expressions. For more information about regular expression, see http://msdn.microsoft.com/en-us/library/bb982727.aspx and http://en.wikipedia.org/wiki/Regular_expression. The name for either type is matched top-down (the first available setting value is used). If one setting is not available in the first node, the subsequent nodes are queried, until all nodes are visited. If the setting is still not available, the default value is used. <process> nodes have higher priority than <font> nodes.

Font face name usually consists of two parts: font family name and font style name, connecting with a space. Font family name is what you see in the "Font" column of the font dialog. Font style name is what you see in the "Font Style" column of the font dialog. One font family may contain multiple styles, and may map to different physical font files. Typically, there are four font styles: (empty for Regular style), Bold, Italic, Bold Italic. Therefore, a bold italic Segoe UI font face name is "Segoe UI Bold Italic". For more information about font, see http://en.wikipedia.org/wiki/Font.

For example, suppose the gdimm requests auto_hinting, embedded_bitmap and embolden settings. The following clip is found:

<process name="note.*">
  <auto_hinting>0</auto_hinting>
  <embedded_bitmap>0</embedded_bitmap>
</process>

<process name=".*pad\.exe">
  <embedded_bitmap>1</embedded_bitmap>
</process>

<font name="Segoe UI.*">
  <embedded_bitmap>0</embedded_bitmap>
  <embolden>1.0</embolden>
</font>

<font name=".*">
  <auto_hinting>1</auto_hinting>
  <embolden>2.0</embolden>
</font>

In this example, if the process is notepad.exe, and font face name is "Segoe UI Bold", the final value of both "auto_hinting" and "embedded_bitmap" are 0, since the first <process> node matches the process name. The final value of "embolden" is 1.0, since the first <font> node matches the font face name. If the process name is changed to "textpad.exe", "embedded_bitmap" becomes 1, because only the second <process> node matches the process name. "auto_hinting" becomes 1, which comes from the last <font> node.

Below is a list of the descriptions of each <gdimm> setting item. The values in the parentheses are the default. For yes/no values, 0 means no and 1 means yes.

  * auto_hinting (0): enable/disable auto hinting in the FreeType loader mode. Auto hinting is a special hinting mode of FreeType. Check http://freetype.sourceforge.net/autohinting/index.html for details. This value is only effective if freetype_loader is 1, and always enabled if light_mode is 1.
  * embedded_bitmap (0): enable/disable use of embedded bitmap in the font file. If enable, the glyph bitmaps are shown as-is.
  * embolden (0.0): adjust the weight of all text. The format is decimal. 0 means no change, positive decimal emboldens the text, while negative decimal affects the opposite way. Additional computation is require for any non-zero value.
  * freetype_loader (1): enable/disable FreeType loader mode. In FreeType loader mode, all character glyphs are loaded by FreeType, otherwise by GetGlyphOutline API. The two modes have different appearances. Besides, thanks to its cache subsystem, FreeType mode has way better performance, while GGO mode has slightly better compatibility. Some settings are only available in FreeType mode.
  * gamma: correct colors by the given gamma value. For gray-level rendering mode (subpixel_render=0), only the value in the "gray" node is used, and all gray levels are corrected. For sub-pixel rendering mode (subpixel_render=1), red, green and blue channels are corrected separately. Color is not corrected if the gamma value is 1.0, which is also the default for all channels. Gamma correction is applied universally, and cannot be bypassed.
  * hinting (1): enable/disable hinting. Hinting makes characters clear to read, at cost of transformed shapes. Disabling hinting make the edges of characters blur, but the glyph shapes are unchanged.
  * lcd_filter (1): integer parameter passed to FT_Library_SetLcdFilter(). If you do not know the detail of it, use 1 or 2.
  * light_mode (1): enable/disable light mode when loading glyphs in FreeType loader mode. According to FreeType documentation, "Many generated glyphs are more fuzzy but better resemble its original shape. A bit like rendering on Mac OS X". Only effective when freetype_loader is 1, and implies auto_hinting = 1.
  * max_height (72): a non-negative integer value. gdimm.dll renders all text when it 0. For any positive numeber, gdimm.dll renders the characters whose height is no more than it, and leaves the rest to Windows. The main purpose of this item is for compatibility. It is not recommended to set it to 0.
  * render_mono (0): the monochrome text are rendered by Windows when it is 0, otherwise by gdimm.dll. Monochrome text are rare to see, except some disabled menu items.
  * render_non_aa (0): if set to 0, the text with font whose quality is NONANTIALIASED_QUALITY is rendered as monochrome, otherwise, rendered as antialiased. Setting this value to 1 may cause some compatibility issue.
  * shadow: draw shadow of text. This node has 3 child nodes: offset_x (1), offset_y (1) and alpha (24) which indicate the horizontal offset, vertical offset and transparency of the shadow, respectively. Positive x_offset moves shadow right. Positive y_offset move shadow down. The alpha value has range of 0-255, where 0 disables shadow, and 255 makes the shadow totally opaque.
  * subpixel_render (1): 0 means render text with gray levels, otherwise use sub-pixel rendering. Usually sub-pixel rendering is more suitable for LCD monitors.
  * zero_alpha (0): if set to 0, the alpha channel of the bitmap in DC is untouched when rendering, otherwise, zero the alpha channel. This option is used to fix compatiblity issue of some Qt applications. This setting might become obsolete in the future.

===============

Below is a list of the descriptions of each <service> setting item.

  * poll_interval (0.5): interval to query Windows if there is new process created. Smaller values increase responsiveness. Note that Windows may consider too small values invalid, and renders gdipp Service malfunctioning.

===============

Similar as the <gdimm> node, there are two types of child nodes can be specified in the <exclude> node. <process> node indicates the excluded process name, and <font> node indicates the excluded font face name. Both names are matched against regular expression.

The folliwing system process names are recommended to exclude for the sack of system stability:

<process>conhost\.exe</process>
<process>csrss\.exe</process>
<process>dllhost\.exe</process>
<process>dwm\.exe</process>
<process>lsass\.exe</process>
<process>lsm\.exe</process>
<process>services\.exe</process>
<process>smss\.exe</process>
<process>svchost\.exe</process>
<process>taskhost\.exe</process>
<process>userinit\.exe</process>
<process>wininit\.exe</process>
<process>winlogon\.exe</process>