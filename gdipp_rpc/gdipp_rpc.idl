[
uuid(DA2AAF70-7FD7-4D0D-979F-2056463C310A),
version(0.9)
]
interface gdipp_rpc
{
	typedef struct gdipp_vector
	{
		long x;
		long y;
	} gdipp_vector;

	typedef struct gdipp_bitmap_glyph
	{
		int left;
		int top;
		int rows;
		int width;
		int pitch;
		[size_is(rows * pitch)] byte *buffer;
		char pixel_mode;
	} gdipp_bitmap_glyph;

	typedef struct gdipp_outline_glyph
	{
		short n_contours;
		short n_points;
		[size_is(n_points)] gdipp_vector *points;
		[size_is(n_points)] char *tags;
		[size_is(n_contours)] char *contours;
	} gdipp_outline_glyph;

	typedef [context_handle] void *GDIPP_RPC_SESSION_HANDLE;
	typedef [context_handle] void *GDIPP_RPC_GLYPH_RUN_HANDLE;

	GDIPP_RPC_SESSION_HANDLE gdipp_rpc_begin_session([in] handle_t h_gdipp_rpc, [in, size_is(logfont_size)] const byte *logfont_buf, [in] unsigned long logfont_size, [in] int render_mode );
	unsigned long gdipp_rpc_get_font_size([in] handle_t h_gdipp_rpc, [in] GDIPP_RPC_SESSION_HANDLE h_session, [in] unsigned long table, [in] unsigned long offset);
	unsigned long gdipp_rpc_get_font_data([in] handle_t h_gdipp_rpc, [in] GDIPP_RPC_SESSION_HANDLE h_session, [in] unsigned long table, [in] unsigned long offset, [out, size_is(buf_size)] byte *data_buf, [in] unsigned long buf_size);
	unsigned long gdipp_rpc_get_font_metrics_size([in] handle_t h_gdipp_rpc, [in] GDIPP_RPC_SESSION_HANDLE h_session);
	unsigned long gdipp_rpc_get_font_metrics_data([in] handle_t h_gdipp_rpc, [in] GDIPP_RPC_SESSION_HANDLE h_session, [out, size_is(buf_size)] byte *metrics_buf, [in] unsigned long buf_size);
	unsigned long gdipp_rpc_get_glyph_indices([in] handle_t h_gdipp_rpc, [in] GDIPP_RPC_SESSION_HANDLE h_session, [in, string, size_is(count * sizeof(wchar_t))] const wchar_t *str, [in] int count, [out, size_is(count * sizeof(unsigned short))] unsigned short *gi);
	GDIPP_RPC_GLYPH_RUN_HANDLE gdipp_rpc_make_glyph_run([in] handle_t h_gdipp_rpc, [in] GDIPP_RPC_SESSION_HANDLE h_session, [in, string] wchar_t *str, [in] unsigned int count, [in] boolean is_glyph_index);
	unsigned long gdipp_rpc_get_glyph_run_size([in] handle_t h_gdipp_rpc, [in] GDIPP_RPC_GLYPH_RUN_HANDLE h_glyph_run);
	boolean gdipp_rpc_get_glyph_run([in] handle_t h_gdipp_rpc, [in] GDIPP_RPC_GLYPH_RUN_HANDLE h_glyph_run, [out, size_is(glyph_run_size)] byte *glyph_run_buf, [in] unsigned long glyph_run_size);
	boolean gdipp_rpc_release_glyph_run([in] handle_t h_gdipp_rpc, [in, out] GDIPP_RPC_GLYPH_RUN_HANDLE *h_glyph_run);
	boolean gdipp_rpc_end_session([in] handle_t h_gdipp_rpc, [in, out] GDIPP_RPC_SESSION_HANDLE *h_session);
}
